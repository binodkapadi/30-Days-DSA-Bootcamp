SOLUTION ==>

#include <iostream>
#include <vector>

int isMountainValleyPattern(const std::vector<int>& arr) {
    int n = arr.size();
    if (n == 1) return 1;

    // Check Pattern 1 (start with increase)
    bool pattern1 = true;
    for (int i = 0; i < n - 1; ++i) {
        if (i % 2 == 0) {
            if (!(arr[i] < arr[i + 1])) {
                pattern1 = false;
                break;
            }
        } else {
            if (!(arr[i] > arr[i + 1])) {
                pattern1 = false;
                break;
            }
        }
    }

    // Check Pattern 2 (start with decrease)
    bool pattern2 = true;
    for (int i = 0; i < n - 1; ++i) {
        if (i % 2 == 0) {
            if (!(arr[i] > arr[i + 1])) {
                pattern2 = false;
                break;
            }
        } else {
            if (!(arr[i] < arr[i + 1])) {
                pattern2 = false;
                break;
            }
        }
    }
    return (pattern1 || pattern2) ? 1 : 0;
}

int main() {
    int n;
    std::cin >> n;
    std::vector<int> arr(n);
    for (int i = 0; i < n; ++i) {
        std::cin >> arr[i];
    }
    int result = isMountainValleyPattern(arr);
    std::cout << result << std::endl;
    return 0;
}

